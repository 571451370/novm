#!/bin/sh

# Mount proc, etc.
mount -t proc proc /proc
mount -t sysfs sysfs /sys
mount -t devtmpfs devtmpfs /dev
mount -t tmpfs tmpfs /run
mount -t devpts devpts /dev/pts

# Parse our command line arguments.
# Critically this will include information
# about attached devices, IP addresses, etc.
for x in $(cat /proc/cmdline); do
    case $x in
    init=*)
        init=${x#init=}
        ;;
    esac
done

# Try logging.
echo "Initial ramdisk running..." > /dev/kmsg

# Load all virt-io modules.
modprobe virtio-pci
modprobe virtio-net
modprobe virtio-blk
modprobe virtio-console
modprobe 9pnet_virtio
modprobe 9p
modprobe ext4

# Shell...
echo "Entering interactive shell..." > /dev/hvc0
/bin/sh -i < /dev/hvc0 > /dev/hvc0 2>&1

# Run our root.
mkdir -p /sysroot 2>/dev/kmsg
mount -t ext4 /dev/vda /sysroot 2>/dev/kmsg
exec switch_root /sysroot sbin/init < /dev/hvc0 > /dev/hvc0 2>&1

# Execute our noinit process.
#
# The first thing this will do is
# call pivot_root given the argument.
#
# The second thing it will do is open
# the virtIO console and become an RPC
# server for the backend. Yeehaw!
exec /sysroot/noguest -pivot_root /root
